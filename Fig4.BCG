### Load necessary packages ----
## Load required R packages for analysis
pkg <- c("BiocManager", "ggplot2", "dplyr", "magrittr", "hdf5r", "patchwork",
         "magrittr")
Biopkg <- c("ggpubr", "ggrastr", "ggbreak", "magick", "harmony", "ggsci",
            "rcartocolor", "corrplot", "scico", "glmGamPoi", "SeuratObject",
            "Seurat", "SeuratData", "pheatmap")
STUtility_repo <- "jbergenstrahle/STUtility"

# Install and load packages function
install_and_load <- function(package_list) {
  # Identify new packages to install
  new_packages <- package_list[!(package_list %in%
                                   installed.packages()[,"Package"])]
  # Install new packages if any
  if (length(new_packages) > 0) {
    install.packages(new_packages)
  }
  # Load required packages
  sapply(package_list, require, character.only = TRUE)
}

# Install and load required packages
install_and_load(c(pkg, Biopkg))


# devtools::install_github("jbergenstrahle/STUtility",
#                          dependencies = T)
# 
# 
# # Install and load STUtility package
# if (!"STUtility" %in% installed.packages()[,"Package"]) {
#   remotes::install_github(STUtility_repo, force = TRUE)
# } else {
#   message("Skipping install of 'STUtility' from a GitHub remote.
#           SHA1 has not changed since last install.")
# }
library(STutility)




load("../../visium/dat.masked.RData")



mine <- c("#AEC7E8FF", "#F6CF71","#F89C74", "#C9DB74", "#FF9896FF",
          "#C5B0D5FF", "#C49C94FF", "#9EB9F3", "#F7B6D2FF", "#8BE0A4",
          "#C7C7C7FF", "#66C5CC", "#D3B484", "#FE88B1",
          "#DBDB8DFF", "#9EDAE5FF", "#B3B3B3")


col_d3 <- c(pal_d3("category10")(10)[1:2],
            mine[1],
            pal_d3("category10")(10)[3],
            mine[2:3],
            pal_d3("category10")(10)[5:6],
            mine[5:10],
            pal_d3("category10")(10)[4],
            mine[11:17])

col_d3 <- c(pal_d3("category10")(10)[1:2],
            mine[1],
            pal_d3("category10")(10)[7],
            mine[2:3],
            pal_d3("category10")(10)[5:6],
            mine[5:10],
            pal_d3("category10")(10)[3],
            mine[11:17])

col_d3 <- c(pal_d3("category10")(10)[1:2],
            mine[1],
            pal_d3("category10")(10)[3],
            mine[2:3],
            pal_d3("category10")(10)[5:6],
            mine[5:10],
            pal_d3("category10")(10)[7],
            mine[11:17])


# plot_cols <- c("#FF7F0EFF","#FFBD31", "#FF5F1F",
#                "#2CA02CFF", "#A8E4A0", "#00A86B")
# plot_cols <- c("#00BFC4","steelblue2", "lightskyblue2",
#                "#F8766D", "sandybrown", "lightpink")
plot_cols <- c("#4682B4", "#AEC7E8FF", "#9467BDFF",
               "#D62728FF","#F89C74", "#FF7F0EFF")

## umap ----
## jpeg 1300*600
# p1 <- Seurat::DimPlot(dat.masked, group.by = "labels", reduction = "umap",
#                       cols = c("#D62728FF","#FF9896FF", "#E6550DFF",
#                                "#1F77B4FF", "#AEC7E8FF", "#6B6ECFFF"))## HAGA + Vehicle
p1 <- Seurat::DimPlot(dat.masked, group.by = "labels", reduction = "umap",
                      cols = plot_cols,
                      pt.size = 0.9,
                      alpha = 0.9)
p1 ## jpeg 700*600

# p2 <- Seurat::DimPlot(dat.masked, group.by = "seurat_clusters_pca",
#                       label = TRUE, label.size = 8, reduction = "umap",
#                       cols = col_d3(length(unique(dat.masked@meta.data$seurat_clusters_pca))))
# p2 ## jpeg 700*600

p2 <- Seurat::DimPlot(dat.masked, group.by = "seurat_clusters_pca",
                      label = F, label.size = 8, reduction = "umap",
                      pt.size = 0.9,
                      alpha = 0.9,
                      cols = col_d3)
p2


p1 - p2


cluster_col <- col_d3
# cluster_col <- col_d3(length(unique(dat.masked@meta.data$seurat_clusters_pca)))
names(cluster_col) <- 0:(length(unique(dat.masked@meta.data$seurat_clusters_pca))-1)

## all
## jpeg 610*620
STutility::ST.FeaturePlot(dat.masked,
                          features = "seurat_clusters_pca",
                          # indices = index.numb,
                          split.labels = F,
                          ncol = 3,
                          # pt.size = 2.8,
                          pt.size = 1.9,
                          # pt.size = 4,
                          cols = cluster_col,
                          label.by = "labels") &
  labs(title = element_blank(),
       strip.text = element_blank())

